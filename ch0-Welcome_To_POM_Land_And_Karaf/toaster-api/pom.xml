<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- It is vital for this to work, that the parent section statically refers to
    the information between <parent> tags from the parent/pom.xml file. Think of this
    as a reverse reference -->
    <parent>
        <groupId>org.opendaylight.toaster</groupId>
        <artifactId>toaster-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../parent</relativePath>
    </parent>

    <!-- This pom.xml is providing the hook to the yang files that define the API. We will define a yang model later -->
    <modelVersion>4.0.0</modelVersion>
    <artifactId>toaster-api</artifactId>
    <description>Yang Model/API for Toaster</description>
    <packaging>bundle</packaging>
    <name>${project.artifactId}</name>
    <prerequisites>
        <maven>3.1.1</maven>
    </prerequisites>

    <!-- Your YANG data model (you don't have one yet in this chapter) depends on YANGTOOLS -->
    <dependencies>
        <!-- we will add a dependency for yangtools in a subsequent chapter -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
